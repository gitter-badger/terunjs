(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{166:function(t,a,s){"use strict";s.r(a);var n=s(0),e=Object(n.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"content"},[s("h1",{attrs:{id:"configurando-terunjs"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#configurando-terunjs","aria-hidden":"true"}},[t._v("#")]),t._v(" Configurando TerunJS")]),t._v(" "),s("h2",{attrs:{id:"entendendo-a-configuracao"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#entendendo-a-configuracao","aria-hidden":"true"}},[t._v("#")]),t._v(" Entendendo a configuração")]),t._v(" "),s("div",{staticClass:"language-json extra-class"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"tags"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('">>"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('">>"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"base_dir"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"commands"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"crud"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"args"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"name"')]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"plugins"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"name"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"symfony:entity-form"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"from"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"entity/>>entity<<Entity.php"')]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"transport"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"from"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"template/base.js"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"to"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"build/>>name<<Created.php"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"args"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"propriedade"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("blockquote",[s("p",[t._v("Entendendo...")])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("Propriedade")]),t._v(" "),s("th",[t._v("Detalhes")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("base_dir")]),t._v(" "),s("td",[t._v("Define a pasta principal normalmente onde fica os templates")])]),t._v(" "),s("tr",[s("td",[t._v("commands")]),t._v(" "),s("td",[t._v("Cada CHAVE é um comando que pode ser executado")])])])]),t._v(" "),s("blockquote",[s("p",[t._v("Propriedades do commands")])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("Propriedade")]),t._v(" "),s("th",[t._v("Detalhes")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("crud")]),t._v(" "),s("td",[t._v("Ao rodar vai ficar "),s("code",[t._v("terun --make crud")])])])])]),t._v(" "),s("blockquote",[s("p",[t._v("Propriedades do crud (comando criado)")])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("Propriedade")]),t._v(" "),s("th",[t._v("Detalhes")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("args")]),t._v(" "),s("td",[t._v("Array de argumentos que podem ser passados tanto para o nome do arquivo quanto para os arquivos que estarão no transport GLOBAL")])]),t._v(" "),s("tr",[s("td",[t._v("plugins")]),t._v(" "),s("td",[t._v("Define plugins para os arquivos")])]),t._v(" "),s("tr",[s("td",[t._v("transport")]),t._v(" "),s("td",[t._v("Array de arquivos que serão transportador de um template para um arquivo final")])])])]),t._v(" "),s("blockquote",[s("p",[t._v("Propriedades do transport")])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("Propriedade")]),t._v(" "),s("th",[t._v("Detalhes")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("from")]),t._v(" "),s("td",[t._v("De onde vem o arquivo")])]),t._v(" "),s("tr",[s("td",[t._v("to")]),t._v(" "),s("td",[t._v("Para onde vai o arquivo")])]),t._v(" "),s("tr",[s("td",[t._v("args")]),t._v(" "),s("td",[t._v("Argumentos necessários, eles podem ser utilizados tanto no nome quanto dentros do arquivo")])])])]),t._v(" "),s("h2",{attrs:{id:"enviroment"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#enviroment","aria-hidden":"true"}},[t._v("#")]),t._v(" Enviroment")]),t._v(" "),s("p",[t._v("O nome da configuração vai ficar "),s("code",[t._v("terun.default.json")]),t._v(" mas se por algum motivo tu quer separar por ambiente pode-se criar.")]),t._v(" "),s("p",[s("code",[t._v("terun.symfony.json")])]),t._v(" "),s("p",[s("code",[t._v("terun.react.json")])]),t._v(" "),s("p",[t._v("Ou o nome que desejar, ficando no final "),s("code",[t._v("terun --make [command] --env symfony")]),t._v(".")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("terun --make [command] \n\n> se o arquivo é o terun.default.json\n\nterun --make [command]\n\n> se o arquivo é diferente de .default como .symfony ou outro nome\n\nterun --make [command] --env [outronome]\n\n")])])])])}],!1,null,null,null);e.options.__file="config.md";a.default=e.exports}}]);